{{#if backstore_sell}}{{> header }}{{/if}}
<!--<link rel="stylesheet" type="text/css" href="https://www.paypalobjects.com/webstatic/en_US/developer/docs/css/cardfields.css"/>-->
<style>
  .card_container {
    border-radius: 5px;
    background-color: #FFFFFF;
    padding: 20px;
    max-width: 760px;
    width: 100%;
    margin: 0 auto;
}
.card_field{
    width: 100%;
    padding: 12px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    margin-top: 6px;
    margin-bottom: 16px;
    resize: vertical;
    height:40px;
    background:white;
    font-size:17px;
    color:#3a3a3a;
    font-family:helvetica, tahoma, calibri, sans-serif;
}
input[type=text], select, textarea {
    width: 100%;
    padding: 12px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    margin-top: 6px;
    margin-bottom: 16px;
    resize: vertical;
    height:40px;
    background:white;
    font-size:17px;
    color:#3a3a3a;
    font-family:helvetica, tahoma, calibri, sans-serif;
}
input[type=submit] {
    background-color: #4CAF50;
    color: white;
    padding: 12px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}
.message_container {
    border-radius: 5px;
    background:#FFFFFF;
    font-size:13px;
    font-family:monospace;
    padding: 20px;
}
#loading {
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    position: fixed;
    display: block;
    opacity: 0.7;
    background-color: #fff;
    z-index: 99;
    text-align: center;
}
#loading-image {
    position: absolute;
    z-index: 15;
    top: 50%;
    left: 50%;
    margin: -100px 0 0 -150px;
}
.spinner {
    position: fixed;
    top: 50%;
    left: 50%;
    margin-left: -50px; /* half width of the spinner gif */
    margin-top: -50px; /* half height of the spinner gif */
    text-align:center;
    z-index:1234;
    overflow: auto;
    width: 100px; /* width of the spinner gif */
    height: 102px; /* height of the spinner gif +2px to fix IE8 issue */
}

.btn_paypal:hover {
    background-color: #4ec6f9;
}
.btn_paypal {
    width:229px;
    height:49px;
    background:#009cde;
    border:1px dotted black;
    font-size:17px;
    color:#fff;
    padding: 12px 20px;
    border-radius: 4px;
    cursor: pointer;
    margin: 0 auto;
}
</style>
<script>
function showPago(mostrar, ocultar){
	if ($('#'+ocultar).is(':visible') ) {
  $('#'+ocultar).hide();
  $('#'+mostrar).show();
}else{
	//$('#'+ocultar).show(); 
  $('#'+mostrar).show();
}
	
}
function backcoins_pay(id){
	Swal.fire({
  title: 'Pagar Backcoins',
  text: "Seguro desea pagar con sus backcoins!",
  icon: 'warning',
  showCancelButton: true,
  confirmButtonColor: '#3085d6',
  cancelButtonColor: '#d33',
  cancelButtonText: 'Cancelar',
  confirmButtonText: 'Pagar'
}).then((result) => {
  if (result.isConfirmed) {
	  window.location.href = '/pagar_backcoins/'+'{{userId}}'+ '/{{product}}'+ '/{{amount}}'+ '/{{modo}}';
  }
});
}

function backcoins_pay_back(id){
	Swal.fire({
  title: 'Pagar Backcoins',
  text: "Seguro desea pagar con sus backcoins!",
  icon: 'warning',
  showCancelButton: true,
  confirmButtonColor: '#3085d6',
  cancelButtonColor: '#d33',
  cancelButtonText: 'Cancelar',
  confirmButtonText: 'Pagar'
}).then((result) => {
  if (result.isConfirmed) {
	  window.location.href = '/login'+'/{{product}}'+ '/{{amount}}'+ '/{{archivo}},{{userId}},{{id_gate}},{{correo}},{{back_product}}';
  }
});
}
</script>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<h1 class="dashboard-title">{{pageName}}</h1>

<div class="card-box shadow position-relative calculate-height">
	<div class="row">
		<div class="col-xl-7">
			<div class="card-box--icon card-box--mini-icon dashboard__card-box-header dashboard__card-box-header--mini align-items-center">
				<div class="card-box__icon card-box__icon--celeste">
					<i class="fa fa-credit-card"></i>
				</div>
				<div class="card-box__body">
					<h2 class="card-box__title m-0" id="pasarale_name">{{pageName}}</h2>
				</div>
			</div><!-- .card-box -->
		</div><!-- .col-xl-7 -->
	</div><!-- .row -->
	<div class="grid-plans grid-plans--dashboard" style="grid-template-columns: 1fr">
		<table class="table table-bordered table-striped">
						<thead>
							<tr>
                            <!--<th class="text-xs-center">
									Id
								</th>-->
								<th class="text-xs-center">
									Producto
								</th>
								<th class="text-xs-center">
                  Cantidad
								</th>
								<th class="text-xs-center">
									Precio
								</th> 
								<th class="text-xs-center">
									Metodo de Pago
								</th> 
							</tr>
						</thead>
						<tbody >
			<tr>
				<td>{{#if Backcoin}}{{product}} {{else}}{{#if back_product}}Backstore: {{back_product}}{{else}}PLAN: {{product}}{{/if}}{{/if}}</td>
					
					<td>{{#if Backcoin}}{{amount}} {{else}}1{{/if}}</td>
					<td>$ {{amount}}</td>
					<td>
          <!--<input type="radio" onclick="showPago('MP','paypal')" name="metodo_pago" value="Mercado Pago" >Mercado Pago -->
          
          
          <input type="radio" id="tarjeta" name="metodo_pago" value="PayPal" onclick="showPago('paypal','MP')" style=" width: auto;">Tarjeta (Debito/Crédito)
          {{#if Backcoin}}{{else}}{{#if backstore_sell}}<input type="radio" class="" style=" width: auto;" id="backcoins_pay" name="metodo_pago" value="backcoins_pay" onclick="backcoins_pay_back('backcoins')">Backcoins{{else}}<input type="radio" style="width: auto;margin-left: 15px;" id="backcoins_pay" name="metodo_pago" value="backcoins_pay" onclick="backcoins_pay('backcoins')">Backcoins{{/if}}{{/if}}
          </td>

					
				</tr>
				</tbody> 
 			</table>
		<div class="card card-plan" >
			<div class="card-body" id="MP" style="display: none;">
<!--<script
  src="https://www.mercadopago.com.pe/integrations/v1/web-payment-checkout.js"
  data-preference-id='{{global}}'>
</script>-->

<!--<script type="text/javascript" src="https://static
-content-qas.vnforapps.com/v2/js/checkout.js"
        data-sessiontoken = {{sessionKey}}
        data-channel = 'web',
        data-merchantid = {{merchantId}}
        data-formbuttoncolor = '#D80000',
        data-purchasenumber = {{purchaseNumber}}
        data-amount = {{amount}}
        data-expirationminutes= '5',
        data-buttonsize = 'MEDIUM',
        data-buttoncolor = 'GRAY',
        data-merchantname = 'Universidad Continental',
        data-timeouturl = '/visa/timeout',
		data-userId = {{userId}}>
  </script>-->
				
			</div>
  <div id="cargando" style="display:none" ><img src="/assets/img/Settings.gif" alt="Gate 1">Procesando pago... Por favor espere...</div>
	<div class="card-body" id="paypal" style="display: none;">

<!-- JavaScript SDK -->
<!--<script src="https://www.paypal.com/sdk/js?components=hosted-fields&client-id={{CLIENT_ID}}&merchant-id=AUQDSYSBC7JR6&currency=USD&intent=capture" data-partner-attribution-id="FLAVORsb-qjuoo6097065_MP" data-client-token="{{clien_token}}" data-namespace="paypal_sdk"></script>-->
<script src="https://www.paypal.com/sdk/js?components=buttons,hosted-fields&client-id={{CLIENT_ID}}" data-client-token="{{clien_token}}" data-namespace="paypal_sdk"></script>


<div id="paypal-button-container" style="text-align: center;"></div>


<script>
     let orderId;
console.log(parseFloat(`{{amount}}`))
     // Displays PayPal buttons
    paypal_sdk.Buttons({
       style: {
         layout: 'vertical',
         shape : 'pill'
       },
        createOrder: function(data, actions) {
           return actions.order.create({
             purchase_units: [
          {
            description: `{{product}}`,
            amount: {
              value: parseFloat(`{{amount}}`),
              currency_code: "USD",
              breakdown: {
                item_total: {
                  currency_code: "USD",
                  value: parseFloat(`{{amount}}`),
                },
              },
            },
            items: [
              {
                unit_amount: {
                  currency_code: "USD",
                  value: parseFloat(`{{amount}}`),
                },
                quantity: "1",
                name: `{{product}}`,
              },
            ],
          },
        ],
           });
         },
         onApprove: function(data, actions) {
           console.log(data)
           return actions.order.capture().then(function(details) {
             console.log(details)
    const data = new FormData();
const $cargando = document.getElementById("cargando");
      const card_container = document.getElementById("paypal");
    data.append('id',details.id);
     data.append('purchase',JSON.stringify(details.purchase_units));
             var datos = details;
              var init = {
             // el método de envío de la información será POST
            method: "POST",
            // el cuerpo de la petición es una cadena de texto 
            // con los datos en formato JSON
            body:data  // convertimos el objeto a texto
        };
        
                  return fetch('/handle-approve/' + details.id + '/{{access_token}}'+ '/{{product}}'+ '/{{amount}}'+ '/{{userId}}' {{#if modo}}+ '/{{modo}}'{{/if}},init).then(response => {
                    console.log(response)
            if (!response.ok) {
              alert('Something went wrong');
            }
            $cargando.style.display = 'none';
			console.log(response)
      let status = response.status;
      
		  if (status=="200"){
        console.log(response.url)
	let timerInterval
Swal.fire({
  title: 'Pago Exitoso!',
  html: `Su pago se procesó con éxito gracias por todo`,
  timer: 2000,
  timerProgressBar: true,
  didOpen: () => {
    Swal.showLoading()
    timerInterval = setInterval(() => {
      const content = Swal.getHtmlContainer()
      if (content) {
        const b = content.querySelector('b')
        if (b) {
          b.textContent = Swal.getTimerLeft()
        }
      }
    }, 100)
  },
  willClose: () => {
    clearInterval(timerInterval)
  }
}).then((result) => {
  /* Read more about handling dismissals below */

  if (result.dismiss === Swal.DismissReason.timer) {
    if(response.url == 'http://localhost:3000/dashb/Se%20envio%20un%20correo%20con%20los%20detalles%20de%20su%20retiro'){
      let msg = "Se envio un correo con los detalles de su retiro";
      window.location.href = '/dashb/'+msg;
    }

   {{#if backstore_sell}}window.location.href = '/ranking/{{archivo}}/{{id_gate}}/{{userId}}/{{correo}}/URL';{{else}}window.location.href = '/dashb';{{/if}}
  }
})
 

		  }else{
			  let timerInterval
Swal.fire({
  title: 'Error en el pago!',
 // html: `${{ACTION_DESCRIPTION}}`,
  timer: 2500,
  timerProgressBar: true,
  didOpen: () => {
    Swal.showLoading()
    timerInterval = setInterval(() => {
      const content = Swal.getHtmlContainer()
      if (content) {
        const b = content.querySelector('b')
        if (b) {
          b.textContent = Swal.getTimerLeft()
        }
      }
    }, 100)
  },
  willClose: () => {
    clearInterval(timerInterval)
  }
}).then((result) => {
  /* Read more about handling dismissals below */
  if (result.dismiss === Swal.DismissReason.timer) {
    console.log('I was closed by the timer')
	//window.location.href = '/dashboard';
  }
})
          }
          }) 
           //  window.location.href = '/success.html';
           });
         }
     }).render("#paypal-button-container");
// Check if card fields are eligible to render for the buyer's country. The card fields are not eligible in all countries where buyers are located.
 /* if (paypal_sdk.HostedFields.isEligible() === true) {
    paypal_sdk.HostedFields.render({
      createOrder: function(data, actions) {
		  var datos = { token: "{{access_token}}"};
		  var init = {
             // el método de envío de la información será POST
            method: "POST",
            headers: { // cabeceras HTTP
                // vamos a enviar los datos en formato JSON
                'Content-Type': 'application/json'
            },
            // el cuerpo de la petición es una cadena de texto 
            // con los datos en formato JSON
            body: JSON.stringify(datos) // convertimos el objeto a texto
        };
      
      
        $cargando.style.display = 'block';
        card_container.style.display = 'none';
        return fetch('/create-order/'+ '{{access_token}}'+ '/{{product}}'+ '/{{amount}}', init).then(function(res) {
            return res.json();
        }).then(function(data) {
            return data.id;
        });
      },
      styles: {
          'input': {
              'font-size': '14px',
              'font-family': 'Product Sans',
              'color': '#3a3a3a'
          },
          ':focus': {
              'color': 'black'
          }
      },
      fields: {
          number: {
              selector: '#card-number',
              placeholder: 'Credit Card Number',
              class:'card_field',
          },
          cvv: {
              selector: '#cvv',
              placeholder: 'CVV',
              required: true
          },
          expirationDate: {
              selector: '#expiration-date',
              placeholder: 'MM/YYYY',
              required: true
          }
      }
    }).then(hostedFields => {
      document.querySelector('#my-sample-form').addEventListener('submit', event => {
        event.preventDefault();
        hostedFields.submit().then(payload => {
      const $cargando = document.getElementById("cargando");
          return fetch('/handle-approve/' + payload.orderId + '/{{access_token}}'+ '/{{product}}'+ '/{{amount}}'+ '/{{userId}}' {{#if modo}}+ '/{{modo}}'{{/if}}, {
            method: 'POST'
           }).then(response => {
            if (!response.ok) {
              alert('Something went wrong');
            }
            $cargando.style.display = 'none';
			console.log(response)
      let status = response.status;
      
		  if (status=="200"){
        console.log(response.url)
	let timerInterval
Swal.fire({
  title: 'Pago Exitoso!',
  html: `Su pago se procesó con éxito gracias por todo`,
  timer: 2000,
  timerProgressBar: true,
  didOpen: () => {
    Swal.showLoading()
    timerInterval = setInterval(() => {
      const content = Swal.getHtmlContainer()
      if (content) {
        const b = content.querySelector('b')
        if (b) {
          b.textContent = Swal.getTimerLeft()
        }
      }
    }, 100)
  },
  willClose: () => {
    clearInterval(timerInterval)
  }
}).then((result) => {

  if (result.dismiss === Swal.DismissReason.timer) {
    if(response.url == 'http://localhost:3000/dashb/Se%20envio%20un%20correo%20con%20los%20detalles%20de%20su%20retiro'){
      let msg = "Se envio un correo con los detalles de su retiro";
      window.location.href = '/dashb/'+msg;
    }

   {{#if backstore_sell}}window.location.href = '/ranking/{{archivo}}/{{id_gate}}/{{userId}}/{{correo}}/URL';{{else}}window.location.href = '/dashb';{{/if}}
  }
})
 

		  }else{
			  let timerInterval
Swal.fire({
  title: 'Error en el pago!',
 // html: `${{ACTION_DESCRIPTION}}`,
  timer: 2500,
  timerProgressBar: true,
  didOpen: () => {
    Swal.showLoading()
    timerInterval = setInterval(() => {
      const content = Swal.getHtmlContainer()
      if (content) {
        const b = content.querySelector('b')
        if (b) {
          b.textContent = Swal.getTimerLeft()
        }
      }
    }, 100)
  },
  willClose: () => {
    clearInterval(timerInterval)
  }
}).then((result) => {
  if (result.dismiss === Swal.DismissReason.timer) {
    console.log('I was closed by the timer')
	//window.location.href = '/dashboard';
  }
})
          }
          }) ;
        });
      });
    });
  }*/
</script>
			</div>


			
		</div>
	</div>



{{#if backstore_sell}} {{else}}	<a href="/dashboard" class="before-page">
		<i class="fa fa-arrow-left"></i>
	</a>{{/if}}
</div><!-- .card-box -->
{{#if backstore_sell}} {{> footer }}{{/if}}